{"version":3,"sources":["components/Input/Input.js","components/Heading/H1.js","components/Button/Button.js","components/Button/PrimaryBtn.js","components/Button/SecondaryBtn.js","components/Modal/Modal.js","components/Dropdown/Dropdown.js","containers/Login/Login.js","utils/validation.js","components/Button/OutlineBtn.js","components/Navbar/Navbar.js","containers/Admin/Dashboard.js","containers/Admin/Student/Create.js","containers/Admin/Student/Student.js","containers/Admin/Course/List.js","containers/Admin/Course/Create.js","containers/Admin/Course/Course.js","containers/Admin/Home.js","App.js","serviceWorker.js","index.js"],"names":["Input","text","focus","name","onChange","type","required","Fragment","InputGroup","className","Prepend","Text","id","FormControl","placeholder","aria-label","aria-describedby","autoFocus","H1","ButtonWrap","variant","onClick","Button","PrimaryBtn","SecondaryBtn","ModalWrap","title","children","lgShow","setLgShow","Modal","size","show","onHide","aria-labelledby","Header","closeButton","Title","Body","Footer","DropdownWrap","options","setSelectedValue","useState","value","setValue","DropdownButton","as","map","option","Dropdown","Item","key","href","e","target","innerText","Number","onDropdownCLick","Login","setIsAuthenticated","username","password","credentials","setCredentials","error","errors","setErrors","onInputChange","length","setIsAuthenticate","document","cookie","validation","OutlineButton","NavbarWrap","setCurrentPage","Navbar","bg","Brand","Nav","Link","Form","inline","style","color","Dashboard","Create","setNewStudent","student","setStudent","useEffect","setStudentObject","Student","newStudent","console","log","List","setNewCourse","categoryId","setCategoryId","course","setCourse","setCourseObject","filter","subCategory","Course","newCourse","Home","currentPage","getPage","App","isAuthenticated","getCookieValue","parts","split","pop","shift","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.48e8f284.chunk.js","sourcesContent":["import React from 'react';\r\nimport { InputGroup, FormControl } from '../BootstrapWrap';\r\n\r\nconst Input = ({ text, focus, name, onChange, type, required }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <InputGroup className='mb-3'>\r\n        <InputGroup.Prepend>\r\n          <InputGroup.Text id='basic-addon1'>{text}</InputGroup.Text>\r\n        </InputGroup.Prepend>\r\n        <FormControl\r\n          type={type}\r\n          name={name}\r\n          placeholder={text}\r\n          aria-label={text}\r\n          aria-describedby='basic-addon1'\r\n          autoFocus={focus}\r\n          onChange={onChange}\r\n          required={required}\r\n        />\r\n      </InputGroup>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nconst H1 = ({ text }) => {\r\n  return <h1>{text}</h1>;\r\n};\r\n\r\nexport default H1;\r\n","import React from 'react';\r\n\r\nimport { Button } from '../BootstrapWrap';\r\n\r\nconst ButtonWrap = ({ variant, text, className, onClick }) => {\r\n  return (\r\n    <Button variant={variant} className={className} onClick={onClick}>\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ButtonWrap;\r\n","import React from 'react';\r\n\r\nimport Button from './Button';\r\n\r\nconst PrimaryBtn = ({ text, onClick }) => {\r\n  return <Button variant='primary' text={text} onClick={onClick} />;\r\n};\r\n\r\nexport default PrimaryBtn;\r\n","import React from 'react';\r\n\r\nimport Button from './Button';\r\n\r\nconst SecondaryBtn = ({ text, onClick }) => {\r\n  return <Button variant='secondary' onClick={onClick} text={text} className='ml-4' />;\r\n};\r\n\r\nexport default SecondaryBtn;\r\n","import React from 'react';\r\nimport { Modal } from '../BootstrapWrap/index';\r\nimport PrimaryBtn from '../Button/PrimaryBtn';\r\nimport SecondaryBtn from '../Button/SecondaryBtn';\r\n\r\nconst ModalWrap = ({ title, children, lgShow, setLgShow, onClick }) => {\r\n  return (\r\n    <Modal size='lg' show={lgShow} onHide={() => setLgShow(false)} aria-labelledby='example-modal-sizes-title-lg'>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id='example-modal-sizes-title-lg'>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{children}</Modal.Body>\r\n      <Modal.Footer>\r\n        <PrimaryBtn text='Submit' onClick={onClick} />\r\n        <SecondaryBtn\r\n          text='Close'\r\n          onClick={() => {\r\n            setLgShow(false);\r\n          }}\r\n        />\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalWrap;\r\n","import React, { useState } from 'react';\r\nimport { FormControl, InputGroup, Dropdown, DropdownButton } from '../BootstrapWrap';\r\n\r\nconst DropdownWrap = ({ name, title, options, setSelectedValue, onChange }) => {\r\n  const [ value, setValue ] = useState('');\r\n\r\n  const onDropdownCLick = (e) => {\r\n    setValue(e.target.innerText);\r\n    setSelectedValue && setSelectedValue(Number(e.target.id));\r\n\r\n    onChange(e.target.name, Number(e.target.id));\r\n  };\r\n\r\n  return (\r\n    <InputGroup className='mb-3'>\r\n      <DropdownButton as={InputGroup.Prepend} variant='outline-secondary' title={title} id='input-group-dropdown-1'>\r\n        {(options || []).map((option) => {\r\n          return (\r\n            <Dropdown.Item key={option.id} name={name} id={option.id} href='#' onClick={(e) => onDropdownCLick(e)}>\r\n              {option.name}\r\n            </Dropdown.Item>\r\n          );\r\n        })}\r\n      </DropdownButton>\r\n      <FormControl aria-describedby='basic-addon1' value={value} />\r\n    </InputGroup>\r\n  );\r\n};\r\n\r\nexport default DropdownWrap;\r\n","import React, { useState } from 'react';\r\nimport { Input, H1, PrimaryBtn, SecondaryBtn } from '../../components';\r\nimport validation from '../../utils/validation';\r\n\r\nimport './Login.css';\r\n\r\nconst Login = ({ setIsAuthenticated }) => {\r\n  const [ credentials, setCredentials ] = useState({ username: '', password: '' });\r\n  const [ errors, setErrors ] = useState({ username: '', password: '', error: '' });\r\n\r\n  const onInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'username':\r\n        return value.length < 1\r\n          ? (setErrors({ ...errors, username: 'Please provide your username!' }),\r\n            setCredentials({ ...credentials, username: '' }))\r\n          : (setCredentials({ ...credentials, username: value }), setErrors({ ...errors, username: '', error: '' }));\r\n\r\n      case 'password':\r\n        return value.length < 1\r\n          ? (setErrors({ ...errors, password: 'Please provide your password!' }),\r\n            setCredentials({ ...credentials, password: '' }))\r\n          : (setCredentials({ ...credentials, password: value }), setErrors({ ...errors, password: '', error: '' }));\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onSubmit = () => validation(setIsAuthenticated, credentials, errors, setErrors);\r\n\r\n  return (\r\n    <div className='login'>\r\n      <H1 text='Please Login' />\r\n      {errors.error ? <p>{errors.error}</p> : ''}\r\n      <Input\r\n        type='text'\r\n        name='username'\r\n        text='Username'\r\n        focus={true}\r\n        value={credentials.username}\r\n        onChange={(e) => onInputChange(e)}\r\n        required={true}\r\n      />\r\n      {errors.username ? <p>{errors.username}</p> : ''}\r\n      <Input\r\n        type='password'\r\n        name='password'\r\n        text='Password'\r\n        value={credentials.password}\r\n        onChange={(e) => onInputChange(e)}\r\n        required={true}\r\n      />\r\n      {errors.password ? <p>{errors.password}</p> : ''}\r\n      <PrimaryBtn text='Login' onClick={onSubmit} />\r\n      <SecondaryBtn text='Reset' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","export default function validation(setIsAuthenticate, credentials, errors, setErrors) {\r\n  if (credentials.username.length !== 0 && credentials.password.length !== 0) {\r\n    if (errors.username.length === 0 && errors.password.length === 0 && errors.error.length === 0) {\r\n      document.cookie = 'loggedin=true';\r\n      return setIsAuthenticate(true);\r\n    }\r\n  }\r\n  setErrors({ ...errors, error: 'Please provide both your username and password!' });\r\n}\r\n","import React from 'react';\r\n\r\nimport Button from './Button';\r\n\r\nconst OutlineButton = ({ text, onClick }) => {\r\n  return <Button variant='outline-light' text={text} onClick={onClick} />;\r\n};\r\n\r\nexport default OutlineButton;\r\n","import React from 'react';\r\n\r\nimport { Navbar, Nav, Form, FormControl } from '../BootstrapWrap';\r\nimport OutlineButton from '../Button/OutlineBtn';\r\n\r\nconst NavbarWrap = ({ setIsAuthenticated, setCurrentPage }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar bg='primary' variant='dark'>\r\n        <Navbar.Brand href='#home'>Navbar</Navbar.Brand>\r\n        <Nav className='mr-auto'>\r\n          <Nav.Link href='#home' onClick={() => setCurrentPage(1)}>\r\n            Home\r\n          </Nav.Link>\r\n          <Nav.Link href='#courses' onClick={() => setCurrentPage(2)}>\r\n            Courses\r\n          </Nav.Link>\r\n          <Nav.Link href='#students' onClick={() => setCurrentPage(3)}>\r\n            Students\r\n          </Nav.Link>\r\n        </Nav>\r\n        <Form inline>\r\n          <FormControl type='text' placeholder='Search' className='mr-sm-2' />\r\n          <OutlineButton variant='outline-light' text='Search' />\r\n        </Form>\r\n        <Nav.Link\r\n          href='#'\r\n          style={{ color: 'white' }}\r\n          onClick={() => {\r\n            document.cookie = 'loggedin=false';\r\n            setIsAuthenticated(false);\r\n          }}\r\n        >\r\n          Logout\r\n        </Nav.Link>\r\n      </Navbar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NavbarWrap;\r\n","import React from 'react';\r\n\r\nconst Dashboard = () => {\r\n  return <div>Dashboard</div>;\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Input, DropdownWrap } from '../../../components';\r\n\r\nconst Create = ({ setNewStudent }) => {\r\n  const [ student, setStudent ] = useState({});\r\n\r\n  useEffect(\r\n    () => {\r\n      setNewStudent(student);\r\n    },\r\n    [ setNewStudent, student ]\r\n  );\r\n\r\n  const courses = [ { id: 1, name: 'Frontend' }, { id: 2, name: 'Backend' }, { id: 3, name: 'Database' } ];\r\n\r\n  const setStudentObject = (key, value) => {\r\n    setStudent({ ...student, [key]: value });\r\n  };\r\n\r\n  return (\r\n    <div className='addStudent'>\r\n      <Input\r\n        type='number'\r\n        name='studentId'\r\n        text='Student ID'\r\n        focus={true}\r\n        onChange={(e) => setStudentObject(e.target.name, e.target.value)}\r\n      />\r\n      <Input\r\n        type='text'\r\n        name='studentName'\r\n        text='Student name'\r\n        onChange={(e) => setStudentObject(e.target.name, e.target.value)}\r\n      />\r\n      <Input\r\n        type='email'\r\n        name='studentEmail'\r\n        text='Student email'\r\n        onChange={(e) => setStudentObject(e.target.name, e.target.value)}\r\n      />\r\n      <DropdownWrap\r\n        name='courseName'\r\n        title='Course name'\r\n        options={courses}\r\n        onChange={(key, value) => setStudentObject(key, value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","import React, { useState } from 'react';\r\nimport { PrimaryBtn, ModalWrap } from '../../../components';\r\nimport Create from './Create';\r\n\r\nconst Student = () => {\r\n  const [ lgShow, setLgShow ] = useState(false);\r\n  const [ newStudent, setNewStudent ] = useState({});\r\n\r\n  const onSubmit = () => {\r\n    console.log(newStudent);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      Student <br />\r\n      <br />\r\n      <PrimaryBtn text='Add a student' onClick={() => setLgShow(!lgShow)} />\r\n      <ModalWrap title='Create New Course' onClick={onSubmit} lgShow={lgShow} setLgShow={setLgShow}>\r\n        <Create setNewStudent={setNewStudent} />\r\n      </ModalWrap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Student;\r\n","import React from 'react';\r\n\r\nconst List = () => {\r\n  return <div>List of courses</div>;\r\n};\r\n\r\nexport default List;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Input, DropdownWrap } from '../../../components';\r\n\r\nconst Create = ({ setNewCourse }) => {\r\n  const [ categoryId, setCategoryId ] = useState(0);\r\n  const [ course, setCourse ] = useState({});\r\n\r\n  useEffect(\r\n    () => {\r\n      setNewCourse(course);\r\n    },\r\n    [ course, setNewCourse ]\r\n  );\r\n\r\n  const categories = [ { id: 1, name: 'Frontend' }, { id: 2, name: 'Backend' }, { id: 3, name: 'Database' } ];\r\n  const subCategories = [\r\n    { id: 1, categoryId: 1, name: 'React' },\r\n    { id: 2, categoryId: 1, name: 'Angular' },\r\n    { id: 3, categoryId: 1, name: 'Vue' },\r\n    { id: 4, categoryId: 2, name: 'Nodejs' },\r\n    { id: 5, categoryId: 2, name: 'PHP' },\r\n    { id: 6, categoryId: 3, name: 'MongoDB' },\r\n    { id: 7, categoryId: 3, name: 'MySQL' }\r\n  ];\r\n\r\n  const setCourseObject = (key, value) => {\r\n    setCourse({ ...course, [key]: value });\r\n  };\r\n\r\n  return (\r\n    <div className='createCourse'>\r\n      <Input\r\n        type='text'\r\n        name='courseName'\r\n        text='Course name'\r\n        focus={true}\r\n        onChange={(e) => setCourseObject(e.target.name, e.target.value)}\r\n      />\r\n      <DropdownWrap\r\n        name='category'\r\n        title='Category'\r\n        options={categories}\r\n        setSelectedValue={(value) => setCategoryId(value)}\r\n        onChange={(key, value) => setCourseObject(key, value)}\r\n      />\r\n      <DropdownWrap\r\n        name='subCategory'\r\n        title='Sub Category'\r\n        options={subCategories.filter((subCategory) => subCategory.categoryId === categoryId)}\r\n        onChange={(key, value) => setCourseObject(key, value)}\r\n      />\r\n      <Input type='number' name='fee' text='Fees' onChange={(e) => setCourseObject(e.target.name, e.target.value)} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","import React, { useState } from 'react';\r\nimport List from './List';\r\nimport { PrimaryBtn, ModalWrap } from '../../../components';\r\nimport Create from './Create';\r\n\r\nconst Course = () => {\r\n  const [ lgShow, setLgShow ] = useState(false);\r\n  const [ newCourse, setNewCourse ] = useState({});\r\n\r\n  const onSubmit = () => {\r\n    console.log(newCourse);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      Course <br />\r\n      <br />\r\n      <PrimaryBtn text='Create New Course' onClick={() => setLgShow(!lgShow)} />\r\n      <List />\r\n      <ModalWrap title='Create New Course' onClick={onSubmit} lgShow={lgShow} setLgShow={setLgShow}>\r\n        <Create setNewCourse={setNewCourse} />\r\n      </ModalWrap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Course;\r\n","import React, { useState } from 'react';\r\n\r\nimport NavbarWrap from '../../components/Navbar/Navbar';\r\nimport Dashboard from './Dashboard';\r\nimport Student from './Student/Student';\r\nimport Course from './Course/Course';\r\n\r\nconst Home = ({ setIsAuthenticated }) => {\r\n  const [ currentPage, setCurrentPage ] = useState(1);\r\n\r\n  const getPage = () => {\r\n    switch (currentPage) {\r\n      case 1:\r\n        return <Dashboard />;\r\n      case 2:\r\n        return <Course />;\r\n      case 3:\r\n        return <Student />;\r\n      default:\r\n        return <Dashboard />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <NavbarWrap setIsAuthenticated={setIsAuthenticated} setCurrentPage={setCurrentPage} />\r\n      {getPage()\r\n      // props.children\r\n      }\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Login from './containers/Login/Login';\r\nimport AdminHome from './containers/Admin/Home';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [ isAuthenticated, setIsAuthenticated ] = useState(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (getCookieValue('loggedin') === 'true') {\r\n        setIsAuthenticated(true);\r\n      }\r\n    },\r\n    [ isAuthenticated ]\r\n  );\r\n\r\n  const getCookieValue = (name) => {\r\n    const value = `; ${document.cookie}`;\r\n    const parts = value.split(`; ${name}=`);\r\n    if (parts.length === 2) return parts.pop().split(';').shift();\r\n  };\r\n\r\n  return (\r\n    <div className='App'>\r\n      {isAuthenticated ? (\r\n        <AdminHome setIsAuthenticated={setIsAuthenticated} />\r\n      ) : (\r\n        <Login setIsAuthenticated={setIsAuthenticated} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}