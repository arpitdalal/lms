{"version":3,"sources":["components/Input/Input.js","components/Heading/H1.js","components/Button/Button.js","components/Button/PrimaryBtn.js","components/Button/SecondaryBtn.js","components/Modal/Modal.js","components/Dropdown/Dropdown.js","containers/Login/Login.js","components/Button/OutlineBtn.js","components/Navbar/Navbar.js","containers/Admin/Dashboard.js","containers/Admin/Student.js","containers/Admin/Course/List.js","containers/Admin/Course/Create.js","containers/Admin/Course/Course.js","containers/Admin/Home.js","App.js","serviceWorker.js","index.js"],"names":["Input","text","focus","name","onChange","Fragment","InputGroup","className","Prepend","Text","id","FormControl","placeholder","aria-label","aria-describedby","autoFocus","H1","ButtonWrap","variant","onClick","Button","PrimaryBtn","SecondaryBtn","ModalWrap","title","children","lgShow","setLgShow","Modal","size","show","onHide","aria-labelledby","Header","closeButton","Title","Body","Footer","DropdownWrap","options","setSelectedValue","useState","value","setValue","DropdownButton","as","map","option","Dropdown","Item","key","href","e","target","innerText","Number","onDropdownCLick","Login","setIsAuthenticated","OutlineButton","NavbarWrap","setCurrentPage","Navbar","bg","Brand","Nav","Link","Form","inline","type","style","color","Dashboard","Student","List","Create","categoryId","setCategoryId","course","setCourse","setCourseObject","filter","subCategory","Course","Home","currentPage","getPage","App","isAuthenticated","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.635f57fe.chunk.js","sourcesContent":["import React from 'react';\r\nimport { InputGroup, FormControl } from '../BootstrapWrap';\r\n\r\nconst Input = ({ text, focus, name, onChange }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <InputGroup className='mb-3'>\r\n        <InputGroup.Prepend>\r\n          <InputGroup.Text id='basic-addon1'>{text}</InputGroup.Text>\r\n        </InputGroup.Prepend>\r\n        <FormControl\r\n          name={name}\r\n          placeholder={text}\r\n          aria-label={text}\r\n          aria-describedby='basic-addon1'\r\n          autoFocus={focus}\r\n          onChange={onChange}\r\n        />\r\n      </InputGroup>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nconst H1 = ({ text }) => {\r\n  return <h1>{text}</h1>;\r\n};\r\n\r\nexport default H1;\r\n","import React from 'react';\r\n\r\nimport { Button } from '../BootstrapWrap';\r\n\r\nconst ButtonWrap = ({ variant, text, className, onClick }) => {\r\n  return (\r\n    <Button variant={variant} className={className} onClick={onClick}>\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ButtonWrap;\r\n","import React from 'react';\r\n\r\nimport Button from './Button';\r\n\r\nconst PrimaryBtn = ({ text, onClick }) => {\r\n  return <Button variant='primary' text={text} onClick={onClick} />;\r\n};\r\n\r\nexport default PrimaryBtn;\r\n","import React from 'react';\r\n\r\nimport Button from './Button';\r\n\r\nconst SecondaryBtn = ({ text }) => {\r\n  return <Button variant='secondary' text={text} className='ml-4' />;\r\n};\r\n\r\nexport default SecondaryBtn;\r\n","import React from 'react';\r\nimport { Modal } from '../BootstrapWrap/index';\r\nimport PrimaryBtn from '../Button/PrimaryBtn';\r\nimport SecondaryBtn from '../Button/SecondaryBtn';\r\n\r\nconst ModalWrap = ({ title, children, lgShow, setLgShow }) => {\r\n  return (\r\n    <Modal size='lg' show={lgShow} onHide={() => setLgShow(false)} aria-labelledby='example-modal-sizes-title-lg'>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id='example-modal-sizes-title-lg'>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{children}</Modal.Body>\r\n      <Modal.Footer>\r\n        <PrimaryBtn text='Submit' />\r\n        <SecondaryBtn text='Close' />\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalWrap;\r\n","import React, { useState } from 'react';\r\nimport { FormControl, InputGroup, Dropdown, DropdownButton } from '../BootstrapWrap';\r\n\r\nconst DropdownWrap = ({ title, options, setSelectedValue }) => {\r\n  const [ value, setValue ] = useState('');\r\n\r\n  const onDropdownCLick = (e) => {\r\n    setValue(e.target.innerText);\r\n    setSelectedValue && setSelectedValue(Number(e.target.id));\r\n  };\r\n\r\n  return (\r\n    <InputGroup className='mb-3'>\r\n      <DropdownButton as={InputGroup.Prepend} variant='outline-secondary' title={title} id='input-group-dropdown-1'>\r\n        {(options || []).map((option) => {\r\n          return (\r\n            <Dropdown.Item key={option.id} id={option.id} href='#' onClick={(e) => onDropdownCLick(e)}>\r\n              {option.name}\r\n            </Dropdown.Item>\r\n          );\r\n        })}\r\n      </DropdownButton>\r\n      <FormControl aria-describedby='basic-addon1' value={value} />\r\n    </InputGroup>\r\n  );\r\n};\r\n\r\nexport default DropdownWrap;\r\n","import React from 'react';\r\nimport { Input, H1, PrimaryBtn, SecondaryBtn } from '../../components';\r\n\r\nimport './Login.css';\r\n\r\nconst Login = ({ setIsAuthenticated }) => {\r\n  return (\r\n    <div className='login'>\r\n      <H1 text='Please Login' />\r\n      <Input text='Username' focus={true} />\r\n      <Input text='Password' />\r\n      <PrimaryBtn\r\n        text='Login'\r\n        onClick={() => {\r\n          setIsAuthenticated(true);\r\n        }}\r\n      />\r\n      <SecondaryBtn text='Reset' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nimport Button from './Button';\r\n\r\nconst OutlineButton = ({ text, onClick }) => {\r\n  return <Button variant='outline-light' text={text} onClick={onClick} />;\r\n};\r\n\r\nexport default OutlineButton;\r\n","import React from 'react';\r\n\r\nimport { Navbar, Nav, Form, FormControl } from '../BootstrapWrap';\r\nimport OutlineButton from '../Button/OutlineBtn';\r\n\r\nconst NavbarWrap = ({ setIsAuthenticated, setCurrentPage }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar bg='primary' variant='dark'>\r\n        <Navbar.Brand href='#home'>Navbar</Navbar.Brand>\r\n        <Nav className='mr-auto'>\r\n          <Nav.Link href='#home' onClick={() => setCurrentPage(1)}>\r\n            Home\r\n          </Nav.Link>\r\n          <Nav.Link href='#courses' onClick={() => setCurrentPage(2)}>\r\n            Courses\r\n          </Nav.Link>\r\n          <Nav.Link href='#students' onClick={() => setCurrentPage(3)}>\r\n            Students\r\n          </Nav.Link>\r\n        </Nav>\r\n        <Form inline>\r\n          <FormControl type='text' placeholder='Search' className='mr-sm-2' />\r\n          <OutlineButton variant='outline-light' text='Search' />\r\n        </Form>\r\n        <Nav.Link href='#' style={{ color: 'white' }} onClick={() => setIsAuthenticated(false)}>\r\n          Logout\r\n        </Nav.Link>\r\n      </Navbar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NavbarWrap;\r\n","import React from 'react';\r\n\r\nconst Dashboard = () => {\r\n  return <div>Dashboard</div>;\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\n\r\nconst Student = () => {\r\n  return <div>Student</div>;\r\n};\r\n\r\nexport default Student;\r\n","import React from 'react';\r\n\r\nconst List = () => {\r\n  return <div>List of courses</div>;\r\n};\r\n\r\nexport default List;\r\n","import React, { useState } from 'react';\r\nimport { Input, DropdownWrap } from '../../../components';\r\n\r\nconst Create = () => {\r\n  const [ categoryId, setCategoryId ] = useState(0);\r\n  const [ course, setCourse ] = useState({});\r\n\r\n  const categories = [ { id: 1, name: 'Frontend' }, { id: 2, name: 'Backend' }, { id: 3, name: 'Database' } ];\r\n  const subCategories = [\r\n    { id: 1, categoryId: 1, name: 'React' },\r\n    { id: 2, categoryId: 1, name: 'Angular' },\r\n    { id: 3, categoryId: 1, name: 'Vue' },\r\n    { id: 4, categoryId: 2, name: 'Nodejs' },\r\n    { id: 5, categoryId: 2, name: 'PHP' },\r\n    { id: 6, categoryId: 3, name: 'MongoDB' },\r\n    { id: 7, categoryId: 3, name: 'MySQL' }\r\n  ];\r\n\r\n  const setSelectedValue = (value) => {\r\n    setCategoryId(value);\r\n  };\r\n\r\n  const setCourseObject = (e) => {\r\n    const key = e.target.name;\r\n    const value = e.target.value;\r\n    setCourse({ ...course, [key]: value });\r\n  };\r\n\r\n  return (\r\n    <div className='createCourse'>\r\n      <Input name='courseName' text='Course name' focus={true} onChange={(e) => setCourseObject(e)} />\r\n      <DropdownWrap title='Category' options={categories} setSelectedValue={setSelectedValue} />\r\n      <DropdownWrap\r\n        title='Sub Category'\r\n        options={subCategories.filter((subCategory) => subCategory.categoryId === categoryId)}\r\n      />\r\n      <Input name='fee' text='Fees' onChange={(e) => setCourseObject(e)} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","import React, { useState } from 'react';\r\nimport List from './List';\r\nimport { PrimaryBtn, ModalWrap } from '../../../components';\r\nimport Create from './Create';\r\n\r\nconst Course = () => {\r\n  const [ lgShow, setLgShow ] = useState(false);\r\n  const [ course, setCourse ] = useState({});\r\n\r\n  return (\r\n    <div>\r\n      Course <br />\r\n      <br />\r\n      <PrimaryBtn text='Create New Course' onClick={() => setLgShow(!lgShow)} />\r\n      <List />\r\n      <ModalWrap title='Create New Course' lgShow={lgShow} setLgShow={setLgShow}>\r\n        <Create setCourse={setCourse} />\r\n      </ModalWrap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Course;\r\n","import React, { useState } from 'react';\r\n\r\nimport NavbarWrap from '../../components/Navbar/Navbar';\r\nimport Dashboard from './Dashboard';\r\nimport Student from './Student';\r\nimport Course from './Course/Course';\r\n\r\nconst Home = ({ setIsAuthenticated }) => {\r\n  const [ currentPage, setCurrentPage ] = useState(1);\r\n\r\n  const getPage = () => {\r\n    switch (currentPage) {\r\n      case 1:\r\n        return <Dashboard />;\r\n      case 2:\r\n        return <Course />;\r\n      case 3:\r\n        return <Student />;\r\n      default:\r\n        return <Dashboard />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <NavbarWrap setIsAuthenticated={setIsAuthenticated} setCurrentPage={setCurrentPage} />\r\n      {getPage()\r\n      // props.children\r\n      }\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport Login from './containers/Login/Login';\r\nimport AdminHome from './containers/Admin/Home';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [ isAuthenticated, setIsAuthenticated ] = useState(false);\r\n\r\n  return (\r\n    <div className='App'>\r\n      {isAuthenticated ? (\r\n        <AdminHome setIsAuthenticated={setIsAuthenticated} />\r\n      ) : (\r\n        <Login setIsAuthenticated={setIsAuthenticated} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}