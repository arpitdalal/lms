{"version":3,"sources":["components/Input/Input.js","components/Heading/H1.js","components/Button/Button.js","components/Button/PrimaryBtn.js","components/Button/SecondaryBtn.js","components/Modal/Modal.js","components/Dropdown/Dropdown.js","components/Table/Table.js","containers/Login/Login.js","utils/validation.js","components/Button/OutlineBtn.js","components/Navbar/Navbar.js","containers/Admin/Dashboard.js","containers/Admin/Student/Create.js","containers/Admin/Student/List.js","containers/Admin/Student/Student.js","containers/Admin/Course/List.js","containers/Admin/Course/Create.js","containers/Admin/Course/Course.js","containers/Admin/Home.js","App.js","serviceWorker.js","index.js"],"names":["Input","text","focus","name","onChange","type","required","value","Fragment","InputGroup","className","Prepend","Text","id","FormControl","placeholder","aria-label","aria-describedby","autoFocus","H1","ButtonWrap","variant","onClick","Button","PrimaryBtn","SecondaryBtn","ModalWrap","title","children","lgShow","setLgShow","Modal","size","show","onHide","aria-labelledby","Header","closeButton","Title","Body","Footer","DropdownWrap","options","setSelectedValue","selectedDropdownValue","filter","option","useState","dropdownValue","setDropdownValue","DropdownButton","as","map","Dropdown","Item","key","href","e","target","innerText","Number","onDropdownCLick","TableWrap","tableHeads","tableRows","Table","striped","bordered","hover","tableHead","tableRow","Object","values","Login","setIsAuthenticated","username","password","credentials","setCredentials","error","errors","setErrors","onInputChange","length","setIsAuthenticate","document","cookie","validation","OutlineButton","NavbarWrap","setCurrentPage","Navbar","bg","Brand","Nav","Link","Form","inline","style","color","Dashboard","Create","setNewStudent","student","setStudent","useEffect","setStudentObject","List","listOfStudents","Student","newStudent","setListOfStudents","newListOfStudents","push","listOfCourses","setNewCourse","newCourse","category","categoryId","setCategoryId","course","setCourse","setCourseObject","courseName","subCategory","fee","Course","setListOfCourses","editCourse","newListOfCourses","Home","currentPage","getPage","App","isAuthenticated","getCookieValue","parts","split","pop","shift","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.c141b5b9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { InputGroup, FormControl } from '../BootstrapWrap';\r\n\r\nconst Input = ({ text, focus, name, onChange, type, required, value }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <InputGroup className='mb-3'>\r\n        <InputGroup.Prepend>\r\n          <InputGroup.Text id='basic-addon1'>{text}</InputGroup.Text>\r\n        </InputGroup.Prepend>\r\n        <FormControl\r\n          type={type}\r\n          name={name}\r\n          placeholder={text}\r\n          value={value}\r\n          aria-label={text}\r\n          aria-describedby='basic-addon1'\r\n          autoFocus={focus}\r\n          onChange={onChange}\r\n          required={required}\r\n        />\r\n      </InputGroup>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nconst H1 = ({ text }) => {\r\n  return <h1>{text}</h1>;\r\n};\r\n\r\nexport default H1;\r\n","import React from 'react';\r\n\r\nimport { Button } from '../BootstrapWrap';\r\n\r\nconst ButtonWrap = ({ variant, text, className, onClick }) => {\r\n  return (\r\n    <Button variant={variant} className={className} onClick={onClick}>\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ButtonWrap;\r\n","import React from 'react';\r\n\r\nimport Button from './Button';\r\n\r\nconst PrimaryBtn = ({ text, onClick }) => {\r\n  return <Button variant='primary' text={text} onClick={onClick} />;\r\n};\r\n\r\nexport default PrimaryBtn;\r\n","import React from 'react';\r\n\r\nimport Button from './Button';\r\n\r\nconst SecondaryBtn = ({ text, onClick }) => {\r\n  return <Button variant='secondary' onClick={onClick} text={text} className='ml-4' />;\r\n};\r\n\r\nexport default SecondaryBtn;\r\n","import React from 'react';\r\nimport { Modal } from '../BootstrapWrap/index';\r\nimport PrimaryBtn from '../Button/PrimaryBtn';\r\nimport SecondaryBtn from '../Button/SecondaryBtn';\r\n\r\nconst ModalWrap = ({ text, title, children, lgShow, setLgShow, onClick }) => {\r\n  return (\r\n    <Modal size='lg' show={lgShow} onHide={() => setLgShow(false)} aria-labelledby='example-modal-sizes-title-lg'>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id='example-modal-sizes-title-lg'>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{children}</Modal.Body>\r\n      <Modal.Footer>\r\n        <PrimaryBtn text={text} onClick={onClick} />\r\n        <SecondaryBtn\r\n          text='Close'\r\n          onClick={() => {\r\n            setLgShow(false);\r\n          }}\r\n        />\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalWrap;\r\n","import React, { useState } from 'react';\r\nimport { FormControl, InputGroup, Dropdown, DropdownButton } from '../BootstrapWrap';\r\n\r\nconst DropdownWrap = ({ name, title, options, setSelectedValue, onChange, value }) => {\r\n  const selectedDropdownValue = options.filter((option) => option.id === value);\r\n  const [ dropdownValue, setDropdownValue ] = useState((selectedDropdownValue[0] || []).name);\r\n\r\n  const onDropdownCLick = (e) => {\r\n    setDropdownValue(e.target.innerText);\r\n    setSelectedValue && setSelectedValue(Number(e.target.id));\r\n\r\n    onChange(e.target.name, Number(e.target.id));\r\n  };\r\n\r\n  return (\r\n    <InputGroup className='mb-3'>\r\n      <DropdownButton as={InputGroup.Prepend} variant='outline-secondary' title={title} id='input-group-dropdown-1'>\r\n        {(options || []).map((option) => {\r\n          return (\r\n            <Dropdown.Item key={option.id} name={name} id={option.id} href='#' onClick={(e) => onDropdownCLick(e)}>\r\n              {option.name}\r\n            </Dropdown.Item>\r\n          );\r\n        })}\r\n      </DropdownButton>\r\n      <FormControl aria-describedby='basic-addon1' value={dropdownValue} />\r\n    </InputGroup>\r\n  );\r\n};\r\n\r\nexport default DropdownWrap;\r\n","import React from 'react';\r\nimport { Table } from '../BootstrapWrap';\r\nimport PrimaryBtn from '../Button/PrimaryBtn';\r\n\r\nconst TableWrap = ({ tableHeads, tableRows, onClick }) => {\r\n  let id = 1;\r\n\r\n  return (\r\n    <Table striped bordered hover>\r\n      <thead>\r\n        <tr>\r\n          {(tableHeads || []).map((tableHead) => {\r\n            return <th>{tableHead}</th>;\r\n          })}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {(tableRows || []).map((tableRow) => {\r\n          return (\r\n            <tr>\r\n              <td>{id++}</td>\r\n              {Object.values(tableRow).map((value) => {\r\n                return <td>{value}</td>;\r\n              })}\r\n              <td>\r\n                <PrimaryBtn id={tableRow.id} text='Edit' onClick={() => onClick(tableRow)} />\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default TableWrap;\r\n","import React, { useState } from 'react';\r\nimport { Input, H1, PrimaryBtn, SecondaryBtn } from '../../components';\r\nimport validation from '../../utils/validation';\r\n\r\nimport './Login.css';\r\n\r\nconst Login = ({ setIsAuthenticated }) => {\r\n  const [ credentials, setCredentials ] = useState({ username: '', password: '' });\r\n  const [ errors, setErrors ] = useState({ username: '', password: '', error: '' });\r\n\r\n  const onInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'username':\r\n        return value.length < 1\r\n          ? (setErrors({ ...errors, username: 'Please provide your username!' }),\r\n            setCredentials({ ...credentials, username: '' }))\r\n          : (setCredentials({ ...credentials, username: value }), setErrors({ ...errors, username: '', error: '' }));\r\n\r\n      case 'password':\r\n        return value.length < 1\r\n          ? (setErrors({ ...errors, password: 'Please provide your password!' }),\r\n            setCredentials({ ...credentials, password: '' }))\r\n          : (setCredentials({ ...credentials, password: value }), setErrors({ ...errors, password: '', error: '' }));\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onSubmit = () => validation(setIsAuthenticated, credentials, errors, setErrors);\r\n\r\n  return (\r\n    <div className='login'>\r\n      <H1 text='Please Login' />\r\n      {errors.error ? <p>{errors.error}</p> : ''}\r\n      <Input\r\n        type='text'\r\n        name='username'\r\n        text='Username'\r\n        focus={true}\r\n        value={credentials.username}\r\n        onChange={(e) => onInputChange(e)}\r\n        required={true}\r\n      />\r\n      {errors.username ? <p>{errors.username}</p> : ''}\r\n      <Input\r\n        type='password'\r\n        name='password'\r\n        text='Password'\r\n        value={credentials.password}\r\n        onChange={(e) => onInputChange(e)}\r\n        required={true}\r\n      />\r\n      {errors.password ? <p>{errors.password}</p> : ''}\r\n      <PrimaryBtn text='Login' onClick={onSubmit} />\r\n      <SecondaryBtn text='Reset' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","export default function validation(setIsAuthenticate, credentials, errors, setErrors) {\r\n  if (credentials.username.length !== 0 && credentials.password.length !== 0) {\r\n    if (errors.username.length === 0 && errors.password.length === 0 && errors.error.length === 0) {\r\n      document.cookie = 'loggedin=true';\r\n      return setIsAuthenticate(true);\r\n    }\r\n  }\r\n  setErrors({ ...errors, error: 'Please provide both your username and password!' });\r\n}\r\n","import React from 'react';\r\n\r\nimport Button from './Button';\r\n\r\nconst OutlineButton = ({ text, onClick }) => {\r\n  return <Button variant='outline-light' text={text} onClick={onClick} />;\r\n};\r\n\r\nexport default OutlineButton;\r\n","import React from 'react';\r\n\r\nimport { Navbar, Nav, Form, FormControl } from '../BootstrapWrap';\r\nimport OutlineButton from '../Button/OutlineBtn';\r\n\r\nconst NavbarWrap = ({ setIsAuthenticated, setCurrentPage }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar bg='primary' variant='dark'>\r\n        <Navbar.Brand href='#home'>Navbar</Navbar.Brand>\r\n        <Nav className='mr-auto'>\r\n          <Nav.Link href='#home' onClick={() => setCurrentPage(1)}>\r\n            Home\r\n          </Nav.Link>\r\n          <Nav.Link href='#courses' onClick={() => setCurrentPage(2)}>\r\n            Courses\r\n          </Nav.Link>\r\n          <Nav.Link href='#students' onClick={() => setCurrentPage(3)}>\r\n            Students\r\n          </Nav.Link>\r\n        </Nav>\r\n        <Form inline>\r\n          <FormControl type='text' placeholder='Search' className='mr-sm-2' />\r\n          <OutlineButton variant='outline-light' text='Search' />\r\n        </Form>\r\n        <Nav.Link\r\n          href='#'\r\n          style={{ color: 'white' }}\r\n          onClick={() => {\r\n            document.cookie = 'loggedin=false';\r\n            setIsAuthenticated(false);\r\n          }}\r\n        >\r\n          Logout\r\n        </Nav.Link>\r\n      </Navbar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NavbarWrap;\r\n","import React from 'react';\r\n\r\nconst Dashboard = () => {\r\n  return <div>Dashboard</div>;\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Input, DropdownWrap } from '../../../components';\r\n\r\nconst Create = ({ setNewStudent }) => {\r\n  const [ student, setStudent ] = useState({});\r\n\r\n  useEffect(\r\n    () => {\r\n      setNewStudent(student);\r\n    },\r\n    [ setNewStudent, student ]\r\n  );\r\n\r\n  const courses = [ { id: 1, name: 'Frontend' }, { id: 2, name: 'Backend' }, { id: 3, name: 'Database' } ];\r\n\r\n  const setStudentObject = (key, value) => {\r\n    setStudent({ ...student, [key]: value });\r\n  };\r\n\r\n  return (\r\n    <div className='addStudent'>\r\n      <Input\r\n        type='number'\r\n        name='studentId'\r\n        text='Student ID'\r\n        focus={true}\r\n        onChange={(e) => setStudentObject(e.target.name, e.target.value)}\r\n      />\r\n      <Input\r\n        type='text'\r\n        name='studentName'\r\n        text='Student name'\r\n        onChange={(e) => setStudentObject(e.target.name, e.target.value)}\r\n      />\r\n      <Input\r\n        type='email'\r\n        name='studentEmail'\r\n        text='Student email'\r\n        onChange={(e) => setStudentObject(e.target.name, e.target.value)}\r\n      />\r\n      <DropdownWrap\r\n        name='courseName'\r\n        title='Course name'\r\n        options={courses}\r\n        onChange={(key, value) => setStudentObject(key, value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","import React from 'react';\r\nimport { TableWrap } from '../../../components';\r\n\r\nconst List = ({ listOfStudents }) => {\r\n  const tableHeader = [ 'Id', 'Student id', 'Name', 'Email', 'Course name', 'Actions' ];\r\n  return <TableWrap tableHeads={tableHeader} tableRows={listOfStudents} />;\r\n};\r\n\r\nexport default List;\r\n","import React, { useState } from 'react';\r\nimport { PrimaryBtn, ModalWrap } from '../../../components';\r\nimport Create from './Create';\r\nimport List from './List';\r\n\r\nconst Student = () => {\r\n  const [ lgShow, setLgShow ] = useState(false);\r\n  const [ newStudent, setNewStudent ] = useState({});\r\n  const [ listOfStudents, setListOfStudents ] = useState([]);\r\n\r\n  const onSubmit = () => {\r\n    const newListOfStudents = [ ...listOfStudents ];\r\n    newListOfStudents.push(newStudent);\r\n    setListOfStudents(newListOfStudents);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      Student <br />\r\n      <br />\r\n      <PrimaryBtn text='Add a student' onClick={() => setLgShow(!lgShow)} />\r\n      <List listOfStudents={listOfStudents} />\r\n      <ModalWrap title='Add a student' text='Add' onClick={onSubmit} lgShow={lgShow} setLgShow={setLgShow}>\r\n        <Create setNewStudent={setNewStudent} />\r\n      </ModalWrap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Student;\r\n","import React from 'react';\r\nimport { TableWrap } from '../../../components';\r\n\r\nconst List = ({ listOfCourses, onClick }) => {\r\n  const tableHeader = [ 'Id', 'Name', 'Category', 'Sub category', 'Fees', 'Actions' ];\r\n  return <TableWrap onClick={onClick} tableHeads={tableHeader} tableRows={listOfCourses} />;\r\n};\r\n\r\nexport default List;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Input, DropdownWrap } from '../../../components';\r\n\r\nconst Create = ({ setNewCourse, newCourse }) => {\r\n  const [ categoryId, setCategoryId ] = useState(newCourse.category || 0);\r\n  const [ course, setCourse ] = useState(newCourse);\r\n\r\n  useEffect(\r\n    () => {\r\n      setNewCourse(course);\r\n    },\r\n    [ course, setNewCourse ]\r\n  );\r\n\r\n  const categories = [ { id: 1, name: 'Frontend' }, { id: 2, name: 'Backend' }, { id: 3, name: 'Database' } ];\r\n  const subCategories = [\r\n    { id: 1, categoryId: 1, name: 'React' },\r\n    { id: 2, categoryId: 1, name: 'Angular' },\r\n    { id: 3, categoryId: 1, name: 'Vue' },\r\n    { id: 4, categoryId: 2, name: 'Nodejs' },\r\n    { id: 5, categoryId: 2, name: 'PHP' },\r\n    { id: 6, categoryId: 3, name: 'MongoDB' },\r\n    { id: 7, categoryId: 3, name: 'MySQL' }\r\n  ];\r\n\r\n  const setCourseObject = (key, value) => {\r\n    setCourse({ ...course, [key]: value });\r\n  };\r\n\r\n  return (\r\n    <div className='createCourse'>\r\n      <Input\r\n        type='text'\r\n        name='courseName'\r\n        text='Course name'\r\n        focus={true}\r\n        value={course.courseName}\r\n        onChange={(e) => setCourseObject(e.target.name, e.target.value)}\r\n      />\r\n      <DropdownWrap\r\n        name='category'\r\n        title='Category'\r\n        options={categories}\r\n        value={course.category}\r\n        setSelectedValue={(value) => setCategoryId(value)}\r\n        onChange={(key, value) => setCourseObject(key, value)}\r\n      />\r\n      <DropdownWrap\r\n        name='subCategory'\r\n        title='Sub Category'\r\n        value={course.subCategory}\r\n        options={subCategories.filter((subCategory) => subCategory.categoryId === categoryId)}\r\n        onChange={(key, value) => setCourseObject(key, value)}\r\n      />\r\n      <Input\r\n        type='number'\r\n        name='fee'\r\n        text='Fees'\r\n        value={course.fee}\r\n        onChange={(e) => setCourseObject(e.target.name, e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","import React, { useState } from 'react';\r\nimport List from './List';\r\nimport { PrimaryBtn, ModalWrap } from '../../../components';\r\nimport Create from './Create';\r\n\r\nconst Course = () => {\r\n  const [ lgShow, setLgShow ] = useState(false);\r\n  const [ newCourse, setNewCourse ] = useState({});\r\n  const [ listOfCourses, setListOfCourses ] = useState([\r\n    {\r\n      courseName: 'Nodejs',\r\n      category: 2,\r\n      subCategory: 5,\r\n      fee: 100\r\n    },\r\n    {\r\n      courseName: 'Reactjs',\r\n      category: 1,\r\n      subCategory: 3,\r\n      fee: 50\r\n    }\r\n  ]);\r\n\r\n  const onSubmit = () => {\r\n    const newListOfCourses = [ ...listOfCourses ];\r\n    newListOfCourses.push(newCourse);\r\n    setListOfCourses(newListOfCourses);\r\n  };\r\n\r\n  const editCourse = (course) => {\r\n    setLgShow(true);\r\n    setNewCourse(course);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      Course <br />\r\n      <br />\r\n      <PrimaryBtn text='Create New Course' onClick={() => setLgShow(!lgShow)} />\r\n      <List listOfCourses={listOfCourses} onClick={(course) => editCourse(course)} />\r\n      <ModalWrap title='Create New Course' text='Create' onClick={onSubmit} lgShow={lgShow} setLgShow={setLgShow}>\r\n        <Create newCourse={newCourse} setNewCourse={setNewCourse} />\r\n      </ModalWrap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Course;\r\n","import React, { useState } from 'react';\r\n\r\nimport NavbarWrap from '../../components/Navbar/Navbar';\r\nimport Dashboard from './Dashboard';\r\nimport Student from './Student/Student';\r\nimport Course from './Course/Course';\r\n\r\nconst Home = ({ setIsAuthenticated }) => {\r\n  const [ currentPage, setCurrentPage ] = useState(1);\r\n\r\n  const getPage = () => {\r\n    switch (currentPage) {\r\n      case 1:\r\n        return <Dashboard />;\r\n      case 2:\r\n        return <Course />;\r\n      case 3:\r\n        return <Student />;\r\n      default:\r\n        return <Dashboard />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <NavbarWrap setIsAuthenticated={setIsAuthenticated} setCurrentPage={setCurrentPage} />\r\n      {getPage()}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Login from './containers/Login/Login';\r\nimport AdminHome from './containers/Admin/Home';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [ isAuthenticated, setIsAuthenticated ] = useState(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (getCookieValue('loggedin') === 'true') {\r\n        setIsAuthenticated(true);\r\n      }\r\n    },\r\n    [ isAuthenticated ]\r\n  );\r\n\r\n  const getCookieValue = (name) => {\r\n    const value = `; ${document.cookie}`;\r\n    const parts = value.split(`; ${name}=`);\r\n    if (parts.length === 2) return parts.pop().split(';').shift();\r\n  };\r\n\r\n  return (\r\n    <div className='App'>\r\n      {isAuthenticated ? (\r\n        <AdminHome setIsAuthenticated={setIsAuthenticated} />\r\n      ) : (\r\n        <Login setIsAuthenticated={setIsAuthenticated} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}