{"version":3,"sources":["components/Input/Input.js","components/Heading/H1.js","components/Button/Button.js","components/Button/PrimaryBtn.js","components/Button/SecondaryBtn.js","components/Modal/Modal.js","components/Dropdown/Dropdown.js","containers/Login/Login.js","components/Button/OutlineBtn.js","components/Navbar/Navbar.js","containers/Admin/Dashboard.js","containers/Admin/Student/Create.js","containers/Admin/Student/Student.js","containers/Admin/Course/List.js","containers/Admin/Course/Create.js","containers/Admin/Course/Course.js","containers/Admin/Home.js","App.js","serviceWorker.js","index.js"],"names":["Input","text","focus","name","onChange","type","Fragment","InputGroup","className","Prepend","Text","id","FormControl","placeholder","aria-label","aria-describedby","autoFocus","H1","ButtonWrap","variant","onClick","Button","PrimaryBtn","SecondaryBtn","ModalWrap","title","children","lgShow","setLgShow","Modal","size","show","onHide","aria-labelledby","Header","closeButton","Title","Body","Footer","DropdownWrap","options","setSelectedValue","useState","value","setValue","DropdownButton","as","map","option","Dropdown","Item","key","href","e","target","innerText","Number","onDropdownCLick","Login","setIsAuthenticated","username","setUsername","password","setPassword","error","setError","onInputChange","length","OutlineButton","NavbarWrap","setCurrentPage","Navbar","bg","Brand","Nav","Link","Form","inline","style","color","Dashboard","Create","Student","List","categoryId","setCategoryId","course","setCourse","setCourseObject","filter","subCategory","Course","Home","currentPage","getPage","App","isAuthenticated","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.e7db0ce9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { InputGroup, FormControl } from '../BootstrapWrap';\r\n\r\nconst Input = ({ text, focus, name, onChange, type }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <InputGroup className='mb-3'>\r\n        <InputGroup.Prepend>\r\n          <InputGroup.Text id='basic-addon1'>{text}</InputGroup.Text>\r\n        </InputGroup.Prepend>\r\n        <FormControl\r\n          type={type}\r\n          name={name}\r\n          placeholder={text}\r\n          aria-label={text}\r\n          aria-describedby='basic-addon1'\r\n          autoFocus={focus}\r\n          onChange={onChange}\r\n        />\r\n      </InputGroup>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nconst H1 = ({ text }) => {\r\n  return <h1>{text}</h1>;\r\n};\r\n\r\nexport default H1;\r\n","import React from 'react';\r\n\r\nimport { Button } from '../BootstrapWrap';\r\n\r\nconst ButtonWrap = ({ variant, text, className, onClick }) => {\r\n  return (\r\n    <Button variant={variant} className={className} onClick={onClick}>\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ButtonWrap;\r\n","import React from 'react';\r\n\r\nimport Button from './Button';\r\n\r\nconst PrimaryBtn = ({ text, onClick }) => {\r\n  return <Button variant='primary' text={text} onClick={onClick} />;\r\n};\r\n\r\nexport default PrimaryBtn;\r\n","import React from 'react';\r\n\r\nimport Button from './Button';\r\n\r\nconst SecondaryBtn = ({ text }) => {\r\n  return <Button variant='secondary' text={text} className='ml-4' />;\r\n};\r\n\r\nexport default SecondaryBtn;\r\n","import React from 'react';\r\nimport { Modal } from '../BootstrapWrap/index';\r\nimport PrimaryBtn from '../Button/PrimaryBtn';\r\nimport SecondaryBtn from '../Button/SecondaryBtn';\r\n\r\nconst ModalWrap = ({ title, children, lgShow, setLgShow }) => {\r\n  return (\r\n    <Modal size='lg' show={lgShow} onHide={() => setLgShow(false)} aria-labelledby='example-modal-sizes-title-lg'>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id='example-modal-sizes-title-lg'>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{children}</Modal.Body>\r\n      <Modal.Footer>\r\n        <PrimaryBtn text='Submit' />\r\n        <SecondaryBtn text='Close' />\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalWrap;\r\n","import React, { useState } from 'react';\r\nimport { FormControl, InputGroup, Dropdown, DropdownButton } from '../BootstrapWrap';\r\n\r\nconst DropdownWrap = ({ title, options, setSelectedValue }) => {\r\n  const [ value, setValue ] = useState('');\r\n\r\n  const onDropdownCLick = (e) => {\r\n    setValue(e.target.innerText);\r\n    setSelectedValue && setSelectedValue(Number(e.target.id));\r\n  };\r\n\r\n  return (\r\n    <InputGroup className='mb-3'>\r\n      <DropdownButton as={InputGroup.Prepend} variant='outline-secondary' title={title} id='input-group-dropdown-1'>\r\n        {(options || []).map((option) => {\r\n          return (\r\n            <Dropdown.Item key={option.id} id={option.id} href='#' onClick={(e) => onDropdownCLick(e)}>\r\n              {option.name}\r\n            </Dropdown.Item>\r\n          );\r\n        })}\r\n      </DropdownButton>\r\n      <FormControl aria-describedby='basic-addon1' value={value} />\r\n    </InputGroup>\r\n  );\r\n};\r\n\r\nexport default DropdownWrap;\r\n","import React, { useState } from 'react';\r\nimport { Input, H1, PrimaryBtn, SecondaryBtn } from '../../components';\r\n\r\nimport './Login.css';\r\n\r\nconst Login = ({ setIsAuthenticated }) => {\r\n  const [ username, setUsername ] = useState('');\r\n  const [ password, setPassword ] = useState('');\r\n  const [ error, setError ] = useState('');\r\n\r\n  const onInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'username':\r\n        return value.length < 1 ? (setError('Please provide your username'), setUsername('')) : setUsername(value);\r\n      case 'password':\r\n        return value.length < 1 ? (setError('Please provide your password'), setPassword('')) : setPassword(value);\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onLoginSubmit = () => {\r\n    if (username && password !== '') {\r\n      setIsAuthenticated(true);\r\n    } else {\r\n      setError('Please provide your username and password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='login'>\r\n      <H1 text='Please Login' />\r\n      {error ? <p>{error}</p> : ''}\r\n      <Input type='text' name='username' text='Username' focus={true} onChange={(e) => onInputChange(e)} />\r\n      <Input type='password' name='password' text='Password' onChange={(e) => onInputChange(e)} />\r\n      <PrimaryBtn text='Login' onClick={onLoginSubmit} />\r\n      <SecondaryBtn text='Reset' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nimport Button from './Button';\r\n\r\nconst OutlineButton = ({ text, onClick }) => {\r\n  return <Button variant='outline-light' text={text} onClick={onClick} />;\r\n};\r\n\r\nexport default OutlineButton;\r\n","import React from 'react';\r\n\r\nimport { Navbar, Nav, Form, FormControl } from '../BootstrapWrap';\r\nimport OutlineButton from '../Button/OutlineBtn';\r\n\r\nconst NavbarWrap = ({ setIsAuthenticated, setCurrentPage }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar bg='primary' variant='dark'>\r\n        <Navbar.Brand href='#home'>Navbar</Navbar.Brand>\r\n        <Nav className='mr-auto'>\r\n          <Nav.Link href='#home' onClick={() => setCurrentPage(1)}>\r\n            Home\r\n          </Nav.Link>\r\n          <Nav.Link href='#courses' onClick={() => setCurrentPage(2)}>\r\n            Courses\r\n          </Nav.Link>\r\n          <Nav.Link href='#students' onClick={() => setCurrentPage(3)}>\r\n            Students\r\n          </Nav.Link>\r\n        </Nav>\r\n        <Form inline>\r\n          <FormControl type='text' placeholder='Search' className='mr-sm-2' />\r\n          <OutlineButton variant='outline-light' text='Search' />\r\n        </Form>\r\n        <Nav.Link href='#' style={{ color: 'white' }} onClick={() => setIsAuthenticated(false)}>\r\n          Logout\r\n        </Nav.Link>\r\n      </Navbar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NavbarWrap;\r\n","import React from 'react';\r\n\r\nconst Dashboard = () => {\r\n  return <div>Dashboard</div>;\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport { Input, DropdownWrap } from '../../../components';\r\n\r\nconst Create = () => {\r\n  const courses = [ { id: 1, name: 'React' }, { id: 2, name: 'SQL' }, { id: 3, name: 'Nodejs' } ];\r\n\r\n  return (\r\n    <div className='addStudent'>\r\n      <Input type='number' name='studentId' text='Student ID' focus={true} />\r\n      <DropdownWrap title='Course name' options={courses} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","import React, { useState } from 'react';\r\nimport { PrimaryBtn, ModalWrap } from '../../../components';\r\nimport Create from './Create';\r\n\r\nconst Student = () => {\r\n  const [ lgShow, setLgShow ] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      Student <br />\r\n      <br />\r\n      <PrimaryBtn text='Add a student' onClick={() => setLgShow(!lgShow)} />\r\n      <ModalWrap title='Create New Course' lgShow={lgShow} setLgShow={setLgShow}>\r\n        <Create />\r\n      </ModalWrap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Student;\r\n","import React from 'react';\r\n\r\nconst List = () => {\r\n  return <div>List of courses</div>;\r\n};\r\n\r\nexport default List;\r\n","import React, { useState } from 'react';\r\nimport { Input, DropdownWrap } from '../../../components';\r\n\r\nconst Create = () => {\r\n  const [ categoryId, setCategoryId ] = useState(0);\r\n  const [ course, setCourse ] = useState({});\r\n\r\n  const categories = [ { id: 1, name: 'Frontend' }, { id: 2, name: 'Backend' }, { id: 3, name: 'Database' } ];\r\n  const subCategories = [\r\n    { id: 1, categoryId: 1, name: 'React' },\r\n    { id: 2, categoryId: 1, name: 'Angular' },\r\n    { id: 3, categoryId: 1, name: 'Vue' },\r\n    { id: 4, categoryId: 2, name: 'Nodejs' },\r\n    { id: 5, categoryId: 2, name: 'PHP' },\r\n    { id: 6, categoryId: 3, name: 'MongoDB' },\r\n    { id: 7, categoryId: 3, name: 'MySQL' }\r\n  ];\r\n\r\n  const setSelectedValue = (value) => {\r\n    setCategoryId(value);\r\n  };\r\n\r\n  const setCourseObject = (e) => {\r\n    const key = e.target.name;\r\n    const value = e.target.value;\r\n    setCourse({ ...course, [key]: value });\r\n  };\r\n\r\n  return (\r\n    <div className='createCourse'>\r\n      <Input type='text' name='courseName' text='Course name' focus={true} onChange={(e) => setCourseObject(e)} />\r\n      <DropdownWrap title='Category' options={categories} setSelectedValue={setSelectedValue} />\r\n      <DropdownWrap\r\n        title='Sub Category'\r\n        options={subCategories.filter((subCategory) => subCategory.categoryId === categoryId)}\r\n      />\r\n      <Input type='number' name='fee' text='Fees' onChange={(e) => setCourseObject(e)} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","import React, { useState } from 'react';\r\nimport List from './List';\r\nimport { PrimaryBtn, ModalWrap } from '../../../components';\r\nimport Create from './Create';\r\n\r\nconst Course = () => {\r\n  const [ lgShow, setLgShow ] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      Course <br />\r\n      <br />\r\n      <PrimaryBtn text='Create New Course' onClick={() => setLgShow(!lgShow)} />\r\n      <List />\r\n      <ModalWrap title='Create New Course' lgShow={lgShow} setLgShow={setLgShow}>\r\n        <Create />\r\n      </ModalWrap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Course;\r\n","import React, { useState } from 'react';\r\n\r\nimport NavbarWrap from '../../components/Navbar/Navbar';\r\nimport Dashboard from './Dashboard';\r\nimport Student from './Student/Student';\r\nimport Course from './Course/Course';\r\n\r\nconst Home = ({ setIsAuthenticated }) => {\r\n  const [ currentPage, setCurrentPage ] = useState(1);\r\n\r\n  const getPage = () => {\r\n    switch (currentPage) {\r\n      case 1:\r\n        return <Dashboard />;\r\n      case 2:\r\n        return <Course />;\r\n      case 3:\r\n        return <Student />;\r\n      default:\r\n        return <Dashboard />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <NavbarWrap setIsAuthenticated={setIsAuthenticated} setCurrentPage={setCurrentPage} />\r\n      {getPage()\r\n      // props.children\r\n      }\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport Login from './containers/Login/Login';\r\nimport AdminHome from './containers/Admin/Home';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [ isAuthenticated, setIsAuthenticated ] = useState(false);\r\n\r\n  return (\r\n    <div className='App'>\r\n      {isAuthenticated ? (\r\n        <AdminHome setIsAuthenticated={setIsAuthenticated} />\r\n      ) : (\r\n        <Login setIsAuthenticated={setIsAuthenticated} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}